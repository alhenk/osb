<?xml version="1.0" encoding="UTF-8"?>
<xml-fragment xmlns:ser="http://www.bea.com/wli/sb/services" xmlns:tran="http://www.bea.com/wli/sb/transports" xmlns:env="http://www.bea.com/wli/config/env" xmlns:http="http://www.bea.com/wli/sb/transports/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:con="http://www.bea.com/wli/sb/typesystem/config" xmlns:jms="http://www.bea.com/wli/sb/transports/jms" xmlns:con1="http://www.bea.com/wli/sb/stages/config" xmlns:con2="http://www.bea.com/wli/sb/stages/transform/config" xmlns:con3="http://www.bea.com/wli/sb/stages/logging/config" xmlns:con4="http://www.bea.com/wli/sb/stages/routing/config">
  <ser:coreEntry isProxy="true" isEnabled="true">
    <ser:binding type="Mixed" xsi:type="con:MixedBindingType" xmlns:con="http://www.bea.com/wli/sb/services/bindings/config">
      <con:request type="XML">
        <con2:schema ref="task2/xsd/payment" element="payment" xmlns:con2="http://www.bea.com/wli/sb/typesystem/config"/>
      </con:request>
    </ser:binding>
    <ser:monitoring isEnabled="false">
      <ser:aggregationInterval>10</ser:aggregationInterval>
      <ser:pipelineMonitoringLevel>Pipeline</ser:pipelineMonitoringLevel>
    </ser:monitoring>
    <ser:reporting>true</ser:reporting>
    <ser:logging isEnabled="true">
      <ser:logLevel>debug</ser:logLevel>
    </ser:logging>
    <ser:sla-alerting isEnabled="true">
      <ser:alertLevel>normal</ser:alertLevel>
    </ser:sla-alerting>
    <ser:pipeline-alerting isEnabled="true">
      <ser:alertLevel>normal</ser:alertLevel>
    </ser:pipeline-alerting>
  </ser:coreEntry>
  <ser:endpointConfig>
    <tran:provider-id>jms</tran:provider-id>
    <tran:inbound>true</tran:inbound>
    <tran:URI>
      <env:value>jms://localhost:8011/jms.tutorial.TutorialXACF/jms.tutorial.TestRegistryQueue</env:value>
    </tran:URI>
    <tran:inbound-properties/>
    <tran:all-headers>false</tran:all-headers>
    <tran:provider-specific>
      <jms:is-queue>true</jms:is-queue>
      <jms:is-secure>false</jms:is-secure>
      <jms:inbound-properties>
        <jms:message-selector>messageType='payment'</jms:message-selector>
        <jms:response-required>false</jms:response-required>
        <jms:retry-count>2</jms:retry-count>
        <jms:retry-interval>5000</jms:retry-interval>
        <jms:error-destination>jms.tutorial.TestRegistryErrorQueue</jms:error-destination>
        <jms:expiration-policy>Redirect</jms:expiration-policy>
        <jms:XA-required>true</jms:XA-required>
        <jms:transaction-timeout>600</jms:transaction-timeout>
      </jms:inbound-properties>
      <jms:request-encoding>UTF-8</jms:request-encoding>
      <jms:jndi-timeout>0</jms:jndi-timeout>
    </tran:provider-specific>
  </ser:endpointConfig>
  <ser:router>
    <con:flow xmlns:con="http://www.bea.com/wli/sb/pipeline/config">
      <con:route-node name="PaymentMessageRouteNode">
        <con:context>
          <con1:userNsDecl namespace="http://www.openuri.org/" prefix="m"/>
          <con1:varNsDecl namespace="http://kz.cits.osb.com/test/registry" prefix="reg"/>
        </con:context>
        <con:actions>
          <con4:route>
            <con1:id>_ActionId-1269314555882865198-2e64ba82.148d5b5ae4b.-7f32</con1:id>
            <con4:service ref="task2/business/PaymentAccounting" xsi:type="ref:BusinessServiceRef" xmlns:ref="http://www.bea.com/wli/sb/reference"/>
            <con4:operation>validatePayment</con4:operation>
            <con4:outboundTransform>
              <con1:log xmlns:con1="http://www.bea.com/wli/sb/stages/logging/config">
                <con5:id xmlns:con5="http://www.bea.com/wli/sb/stages/config">_ActionId-988064432938844114-6ea0fb1c.148e379b1b5.-7ffb</con5:id>
                <con1:logLevel>warning</con1:logLevel>
                <con1:expr>
                  <con5:xqueryText xmlns:con5="http://www.bea.com/wli/sb/stages/config">$body/reg:payment</con5:xqueryText>
                </con1:expr>
                <con1:message>JMS PAYMENT</con1:message>
              </con1:log>
              <con3:log>
                <con1:id>_ActionId-988064432938844114-6ea0fb1c.148e379b1b5.-7fff</con1:id>
                <con3:logLevel>warning</con3:logLevel>
                <con3:expr>
                  <con1:xqueryText>&lt;open:validatePayment xmlns:open="http://www.openuri.org/">
    {$body/reg:payment}
&lt;/open:validatePayment></con1:xqueryText>
                </con3:expr>
                <con3:message>------PARAMETER FOR EJB VALIDATE METHOD------</con3:message>
              </con3:log>
              <con2:replace varName="body" contents-only="true">
                <con1:id>_ActionId-1269314555882865198-2e64ba82.148d5b5ae4b.-7edd</con1:id>
                <con2:expr>
                  <con1:xqueryText>&lt;open:validatePayment xmlns:open="http://www.openuri.org/">
    {$body/reg:payment}
&lt;/open:validatePayment></con1:xqueryText>
                </con2:expr>
              </con2:replace>
            </con4:outboundTransform>
            <con4:responseTransform>
              <con3:log>
                <con1:id>_ActionId-1269314555882865198-2e64ba82.148d5b5ae4b.-7eaa</con1:id>
                <con3:logLevel>warning</con3:logLevel>
                <con3:expr>
                  <con1:xqueryText>$body//m:result</con1:xqueryText>
                </con3:expr>
                <con3:message><![CDATA[<<<<<<<<<PAYMENT VALIDATION RESULT>>>>>>>>>>>>>>]]></con3:message>
              </con3:log>
              <con2:wsCallout>
                <con1:id>_ActionId-2798093955473254645-3caac96.148e39d1eae.-7f9d</con1:id>
                <con2:service xsi:type="ref:BusinessServiceRef" ref="task2/business/MockingRegistryService" xmlns:ref="http://www.bea.com/wli/sb/reference"/>
                <con2:operation>mockingRequest</con2:operation>
                <con2:request>
                  <con2:param>
                    <con2:name>request</con2:name>
                    <con2:variable>$mockRequest</con2:variable>
                  </con2:param>
                </con2:request>
                <con2:response>
                  <con2:param>
                    <con2:name>response</con2:name>
                    <con2:variable>mockResponse</con2:variable>
                  </con2:param>
                </con2:response>
                <con2:requestTransform>
                  <con2:assign varName="mockRequest">
                    <con1:id>_ActionId-2798093955473254645-3caac96.148e39d1eae.-7f71</con1:id>
                    <con2:expr>
                      <con1:xqueryText>$body//m:result/text()</con1:xqueryText>
                    </con2:expr>
                  </con2:assign>
                </con2:requestTransform>
                <con2:responseTransform>
                  <con3:log>
                    <con1:id>_ActionId-2798093955473254645-3caac96.148e39d1eae.-7f32</con1:id>
                    <con3:logLevel>warning</con3:logLevel>
                    <con3:expr>
                      <con1:xqueryText>$mockResponse</con1:xqueryText>
                    </con3:expr>
                    <con3:message>MOCKING SERVICE RESPONSE</con3:message>
                  </con3:log>
                </con2:responseTransform>
              </con2:wsCallout>
            </con4:responseTransform>
          </con4:route>
        </con:actions>
      </con:route-node>
    </con:flow>
  </ser:router>
</xml-fragment>
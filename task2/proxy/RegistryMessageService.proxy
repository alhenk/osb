<?xml version="1.0" encoding="UTF-8"?>
<xml-fragment xmlns:ser="http://www.bea.com/wli/sb/services" xmlns:tran="http://www.bea.com/wli/sb/transports" xmlns:env="http://www.bea.com/wli/config/env" xmlns:http="http://www.bea.com/wli/sb/transports/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:con="http://www.bea.com/wli/sb/pipeline/config" xmlns:con1="http://www.bea.com/wli/sb/stages/config" xmlns:con2="http://www.bea.com/wli/sb/stages/logging/config" xmlns:con3="http://www.bea.com/wli/sb/stages/transform/config" xmlns:con4="http://www.bea.com/wli/sb/stages/publish/config" xmlns:con5="http://www.bea.com/wli/sb/stages/routing/config">
  <ser:coreEntry isProxy="true" isEnabled="true">
    <ser:binding type="SOAP" isSoap12="false" xsi:type="con:SoapBindingType" xmlns:con="http://www.bea.com/wli/sb/services/bindings/config">
      <con:wsdl ref="task2/wsdl/RegistryMessageService"/>
      <con:binding>
        <con:name>RegistryMessageServiceSOAP</con:name>
        <con:namespace>http://osb.tutorial.epam.com/RegistryMessageService/test</con:namespace>
      </con:binding>
      <con:selector type="SOAP body"/>
    </ser:binding>
    <ser:monitoring isEnabled="false">
      <ser:aggregationInterval>10</ser:aggregationInterval>
      <ser:pipelineMonitoringLevel>Pipeline</ser:pipelineMonitoringLevel>
    </ser:monitoring>
    <ser:reporting>true</ser:reporting>
    <ser:logging isEnabled="true">
      <ser:logLevel>debug</ser:logLevel>
    </ser:logging>
    <ser:sla-alerting isEnabled="true">
      <ser:alertLevel>normal</ser:alertLevel>
    </ser:sla-alerting>
    <ser:pipeline-alerting isEnabled="true">
      <ser:alertLevel>normal</ser:alertLevel>
    </ser:pipeline-alerting>
    <ser:ws-policy>
      <ser:binding-mode>wsdl-policy-attachments</ser:binding-mode>
    </ser:ws-policy>
  </ser:coreEntry>
  <ser:endpointConfig>
    <tran:provider-id>http</tran:provider-id>
    <tran:inbound>true</tran:inbound>
    <tran:URI>
      <env:value>/task2/proxy/ProxyService1</env:value>
    </tran:URI>
    <tran:inbound-properties/>
    <tran:all-headers>false</tran:all-headers>
    <tran:provider-specific>
      <http:inbound-properties/>
    </tran:provider-specific>
  </ser:endpointConfig>
  <ser:router>
    <con:pipeline type="request" name="SendDataPipelinePair_request">
      <con:stage name="ErrorStage" xmlns:con2="http://www.bea.com/wli/sb/stages/config" xmlns:con1="http://www.bea.com/wli/sb/stages/logging/config">
        <con:context/>
        <con:actions>
          <con3:Error>
            <con5:comment xmlns:con5="http://www.bea.com/wli/sb/stages/config">Unknown operation</con5:comment>
            <con5:id xmlns:con5="http://www.bea.com/wli/sb/stages/config">_ActionId-3530596094091821870--5ad78aba.148d0ddd1ce.-7ebb</con5:id>
            <con3:errCode>TASK2:00002</con3:errCode>
            <con3:message>The SendData operation is not implemented yet.</con3:message>
          </con3:Error>
        </con:actions>
      </con:stage>
    </con:pipeline>
    <con:pipeline type="response" name="SendDataPipelinePair_response"/>
    <con:pipeline type="request" name="DefaultOperationPipelinePair_request">
      <con:stage name="ErrorStage" xmlns:con2="http://www.bea.com/wli/sb/stages/config" xmlns:con1="http://www.bea.com/wli/sb/stages/logging/config">
        <con:context/>
        <con:actions>
          <con3:Error>
            <con5:comment xmlns:con5="http://www.bea.com/wli/sb/stages/config">Unknown operation</con5:comment>
            <con5:id xmlns:con5="http://www.bea.com/wli/sb/stages/config">_ActionId-2737713877181080489--6d81ad17.148ca5d42f0.-7e16</con5:id>
            <con3:errCode>TASK2:00001</con3:errCode>
            <con3:message>Unknown operation.</con3:message>
          </con3:Error>
        </con:actions>
      </con:stage>
    </con:pipeline>
    <con:pipeline type="response" name="DefaultOperationPipelinePair_response"/>
    <con:pipeline type="request" name="ForwardMessagePipelinePair_request">
      <con:stage name="MessageProcessingStage">
        <con:context>
          <con1:userNsDecl namespace="http://osb.tutorial.epam.com/RegistryMessageService/test" prefix="test"/>
          <con1:userNsDecl namespace="http://kz.cits.osb.com/test/registry" prefix="reg"/>
        </con:context>
        <con:actions>
          <con2:log>
            <con1:id>_ActionId-2737713877181080489--6d81ad17.148ca5d42f0.-79d6</con1:id>
            <con2:logLevel>warning</con2:logLevel>
            <con2:expr>
              <con1:xqueryText>$body/test:forwardMessage/request/text()</con1:xqueryText>
            </con2:expr>
            <con2:message>MESSAGE REQUEST</con2:message>
          </con2:log>
          <con3:ifThenElse>
            <con1:id>_ActionId-2737713877181080489--6d81ad17.148ca5d42f0.-7dde</con1:id>
            <con3:case>
              <con3:condition>
                <con1:xqueryText>exists($body/test:forwardMessage/request/text())</con1:xqueryText>
              </con3:condition>
              <con3:actions>
                <con3:javaCallout varName="registry">
                  <con1:comment>Uncompress base64&amp;zip string</con1:comment>
                  <con1:id>_ActionId-2737713877181080489--6d81ad17.148ca5d42f0.-7d48</con1:id>
                  <con3:archive ref="task2/jar/task2-zip-util"/>
                  <con3:className>com.epam.osb.tutorial.registry.ZipUtil</con3:className>
                  <con3:method>public static java.lang.String uncompressString(java.lang.String)</con3:method>
                  <con3:expr>
                    <con1:xqueryText>$body/test:forwardMessage/request/text()</con1:xqueryText>
                  </con3:expr>
                </con3:javaCallout>
                <con3:assign varName="registryXml">
                  <con1:comment>Inline the text $registry into XmlObject</con1:comment>
                  <con1:id>_ActionId-2737713877181080489--6d81ad17.148ca5d42f0.-7d0d</con1:id>
                  <con3:expr>
                    <con1:xqueryText>fn-bea:inlinedXML($registry)</con1:xqueryText>
                  </con3:expr>
                </con3:assign>
                <con2:log>
                  <con1:id>_ActionId-2737713877181080489--6d81ad17.148ca5d42f0.-7cd7</con1:id>
                  <con2:logLevel>warning</con2:logLevel>
                  <con2:expr>
                    <con1:xqueryText>$registryXml</con1:xqueryText>
                  </con2:expr>
                  <con2:message>XML OBJECT</con2:message>
                </con2:log>
                <con3:validate>
                  <con1:comment>Validate registryXml message</con1:comment>
                  <con1:id>_ActionId-2737713877181080489--6d81ad17.148ca5d42f0.-7cab</con1:id>
                  <con3:schema ref="task2/xsd/registry"/>
                  <con3:schemaElement xmlns:reg="http://kz.cits.osb.com/test/registry">reg:registry</con3:schemaElement>
                  <con3:varName>registryXml</con3:varName>
                  <con3:resultVarName>isValid</con3:resultVarName>
                </con3:validate>
                <con3:ifThenElse>
                  <con1:comment>Publish if registryXml message valid</con1:comment>
                  <con1:id>_ActionId-2737713877181080489--6d81ad17.148ca5d42f0.-7c80</con1:id>
                  <con3:case>
                    <con3:condition>
                      <con1:xqueryText>$isValid</con1:xqueryText>
                    </con3:condition>
                    <con3:actions>
                      <con3:assign varName="paymentCount">
                        <con1:comment>Payment count</con1:comment>
                        <con1:id>_ActionId-2737713877181080489--6d81ad17.148ca5d42f0.-7c5a</con1:id>
                        <con3:expr>
                          <con1:xqueryText>count($registryXml/reg:payment)</con1:xqueryText>
                        </con3:expr>
                      </con3:assign>
                      <con2:log>
                        <con1:id>_ActionId-2737713877181080489--6d81ad17.148ca5d42f0.-7c30</con1:id>
                        <con2:logLevel>warning</con2:logLevel>
                        <con2:expr>
                          <con1:xqueryText>$paymentCount</con1:xqueryText>
                        </con2:expr>
                        <con2:message>PAYMENT COUNT</con2:message>
                      </con2:log>
                      <con3:assign varName="response">
                        <con1:comment>Response: OK</con1:comment>
                        <con1:id>_ActionId-2737713877181080489--6d81ad17.148ca5d42f0.-7c0b</con1:id>
                        <con3:expr>
                          <con1:xqueryText>'OK'</con1:xqueryText>
                        </con3:expr>
                      </con3:assign>
                    </con3:actions>
                  </con3:case>
                  <con3:default>
                    <con3:assign varName="response">
                      <con1:comment>Response: The message is invalid</con1:comment>
                      <con1:id>_ActionId-2737713877181080489--6d81ad17.148ca5d42f0.-7b23</con1:id>
                      <con3:expr>
                        <con1:xqueryText>'THE MESSAGE IS INVALID'</con1:xqueryText>
                      </con3:expr>
                    </con3:assign>
                  </con3:default>
                </con3:ifThenElse>
              </con3:actions>
            </con3:case>
            <con3:default>
              <con3:assign varName="response">
                <con1:comment>Response: No message</con1:comment>
                <con1:id>_ActionId-2737713877181080489--6d81ad17.148ca5d42f0.-7b06</con1:id>
                <con3:expr>
                  <con1:xqueryText>'FAIL: NO MESSAGE'</con1:xqueryText>
                </con3:expr>
              </con3:assign>
            </con3:default>
          </con3:ifThenElse>
        </con:actions>
      </con:stage>
    </con:pipeline>
    <con:pipeline type="response" name="ForwardMessagePipelinePair_response">
      <con:stage name="ResponseStage">
        <con:context/>
        <con:actions>
          <con3:replace varName="body" contents-only="true">
            <con1:comment>response</con1:comment>
            <con1:id>_ActionId-2737713877181080489--6d81ad17.148ca5d42f0.-7a4b</con1:id>
            <con3:expr>
              <con1:xqueryText>$response</con1:xqueryText>
            </con3:expr>
          </con3:replace>
          <con2:log>
            <con1:id>_ActionId-2737713877181080489--6d81ad17.148ca5d42f0.-7a34</con1:id>
            <con2:logLevel>warning</con2:logLevel>
            <con2:expr>
              <con1:xqueryText>$body</con1:xqueryText>
            </con2:expr>
            <con2:message>MESSAGE RESPONSE</con2:message>
          </con2:log>
        </con:actions>
      </con:stage>
    </con:pipeline>
    <con:flow>
      <con:branch-node type="operation" name="RegistryMessageServiceOperations">
        <con:context xmlns:con2="http://www.bea.com/wli/sb/stages/config" xmlns:con1="http://www.bea.com/wli/sb/stages/logging/config"/>
        <con:branch-table xmlns:con2="http://www.bea.com/wli/sb/stages/config" xmlns:con1="http://www.bea.com/wli/sb/stages/logging/config">
          <con:branch name="forwardMessage">
            <con:operator>equals</con:operator>
            <con:value/>
            <con:flow>
              <con:pipeline-node name="ForwardMessagePipelinePair">
                <con:request>ForwardMessagePipelinePair_request</con:request>
                <con:response>ForwardMessagePipelinePair_response</con:response>
              </con:pipeline-node>
              <con:route-node name="JMSPaymentMessageRoute">
                <con:context/>
                <con:actions>
                  <con5:route>
                    <con6:id xmlns:con6="http://www.bea.com/wli/sb/stages/config">_ActionId-7292771031716581476--1c00fe37.148d402e0b4.-7f48</con6:id>
                    <con5:service ref="task2/business/JMSProducer" xsi:type="ref:BusinessServiceRef" xmlns:ref="http://www.bea.com/wli/sb/reference"/>
                    <con5:outboundTransform>
                      <con1:log>
                        <con6:id xmlns:con6="http://www.bea.com/wli/sb/stages/config">_ActionId-7292771031716581476--1c00fe37.148d402e0b4.-7e88</con6:id>
                        <con1:logLevel>warning</con1:logLevel>
                        <con1:expr>
                          <con6:xqueryText xmlns:con6="http://www.bea.com/wli/sb/stages/config">$registryXml</con6:xqueryText>
                        </con1:expr>
                        <con1:message>XML OBJECT AGAIN?????????????????</con1:message>
                      </con1:log>
                      <con3:replace varName="body" contents-only="true" xmlns:con2="http://www.bea.com/wli/sb/stages/logging/config" xmlns:con1="http://www.bea.com/wli/sb/stages/config">
                        <con1:comment>registry</con1:comment>
                        <con1:id>_ActionId-7292771031716581476--1c00fe37.148d402e0b4.-7f0f</con1:id>
                        <con3:expr>
                          <con1:xqueryText>$registry</con1:xqueryText>
                        </con3:expr>
                      </con3:replace>
                      <con3:transport-headers xmlns:con2="http://www.bea.com/wli/sb/stages/logging/config" xmlns:con1="http://www.bea.com/wli/sb/stages/config">
                        <con1:id>_ActionId-7292771031716581476--1c00fe37.148d402e0b4.-7ed6</con1:id>
                        <con3:header-set>outbound-request</con3:header-set>
                        <con3:header name="messageType" value="expression">
                          <con1:xqueryText>'registry'</con1:xqueryText>
                        </con3:header>
                      </con3:transport-headers>
                      <con1:log>
                        <con6:id xmlns:con6="http://www.bea.com/wli/sb/stages/config">_ActionId-7292771031716581476--1c00fe37.148d402e0b4.-7eb2</con6:id>
                        <con1:logLevel>warning</con1:logLevel>
                        <con1:expr>
                          <con6:xqueryText xmlns:con6="http://www.bea.com/wli/sb/stages/config">$body</con6:xqueryText>
                        </con1:expr>
                        <con1:message><![CDATA[<<<<<<<<<<<<SEND XML PAYMENT MESSAGE>>>>>>>>>>>>>>>>>>]]></con1:message>
                      </con1:log>
                    </con5:outboundTransform>
                    <con5:responseTransform/>
                  </con5:route>
                </con:actions>
              </con:route-node>
            </con:flow>
          </con:branch>
          <con:branch name="sendData">
            <con:operator>equals</con:operator>
            <con:value/>
            <con:flow>
              <con:pipeline-node name="SendDataPipelinePair">
                <con:request>SendDataPipelinePair_request</con:request>
                <con:response>SendDataPipelinePair_response</con:response>
              </con:pipeline-node>
            </con:flow>
          </con:branch>
          <con:default-branch>
            <con:flow>
              <con:pipeline-node name="DefaultOperationPipelinePair">
                <con:request>DefaultOperationPipelinePair_request</con:request>
                <con:response>DefaultOperationPipelinePair_response</con:response>
              </con:pipeline-node>
            </con:flow>
          </con:default-branch>
        </con:branch-table>
      </con:branch-node>
    </con:flow>
  </ser:router>
</xml-fragment>